
@{
    ViewBag.Title = "Create";
}

<h2>Create Category</h2>
<form id="add-category-form">

    <div class="form-group">
        <label>Name<span class="text-danger">*</span></label>
        <input type="text" name="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label>Description<span class="text-danger">*</span></label>
        <input type="text" name="Description" class="form-control" />
    </div>

    <div class="form-group">
        <label>Image</label>
        <input name="ImageUrl" id="ImageUrl" type="hidden" />
        <input id="imageUpload" type="file" name="Image" accept=".png, .jpg, .jpeg" class="form-control" />
    </div>

    <div class="thumb">
        <img id="categoryImage" width="100" />
    </div>

    <div class="form-group">
        <label>Is Featured ?</label>
        <input type="radio" name="IsFeatured" value="true" class="form-control"/> YES
        <input type="radio" name="IsFeatured" value="false" class="form-control"/> NO<br />
    </div>

    <button id="save-category" type="button">Save</button>
</form>

<script>
    $("#imageUpload").change(function () {
        var element = this;

        var formData = new FormData();
        var totalFiles = element.files.length;

        for (let i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: "POST",
            url: "/Shared/UploadImage",
            data: formData,
            dataType: 'json',
            processData: false,
            contentType: false
        }).done(function (response) {
            if (response.Success) {
                $("#ImageUrl").val(response.ImageUrl);
                $("#categoryImage").attr("src", response.ImageUrl);
            }
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#add-category-form").validate({
        rules: {
            Name: {
                required: true,
                minlength: 5,
                maxlength: 20
            },
            Description: {
                required: true,
                minlength: 5,
                maxlength: 80
            }
        },
        messages: {
            Name: {
                required: 'Name is required',
                minlength: 'Minimum length is 5',
                maxlength: 'Maximum length is 10'
            },
            Description: {
                required: 'Description is required',
                minlength: 'Minimum length is 5',
                maxlength: 'Maximum length is 80'
            }
        },
        // Called when the element is invalid:
        highlight: function (element) {
            $(element).css('background', '#ffdddd');
        },
        // Called when the element is valid:
        unhighlight: function (element) {
            $(element).css('background', '#ffffff');
        }
    });

    $("#save-category").click(function () {
        if ($("#add-category-form").valid()) {
            $.ajax({
                type: "POST",
                url: "/Category/Create",
                data: $("#add-category-form").serialize()
            }).done(function (response) {
                $('#table-container').html(response);
                $('#action-container').html("");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                swal({
                    title: "Warning",
                    text: "Please enter all requred fields",
                    icon: "warning",
                    dangerMode: true,
                })
            });
        } 
    });
</script>

