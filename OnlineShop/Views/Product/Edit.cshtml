@model Product
@{
    ViewBag.Title = "Edit";


    var imageUrl = !string.IsNullOrEmpty(Model.ImageUrl) ? Model.ImageUrl : "/Content/images/download.png";
}

<h2>Edit Product</h2>
<form id="form-product-edition" method="post">
    <input type="hidden" name="Id" value="@Model.Id" /><br />
    <input type="hidden" name="CategoryId" value="@Model.CategoryId" /><br />

    <label>Name</label>
    <input type="text" value="@Model.Name" name="Name" /><br />

    <label>Description</label>
    <textarea name="Description" rows="1" cols="50">@Model.Description</textarea><br />

    <label>Price</label>
    <input type="text" value="@Model.Price" name="Price" /><br />

    <div class="form-group">
        <label>Edit Image </label>
        <div class="radio form-control">
            <input name="ImageUrl" value="@imageUrl" id="ImageUrl" type="hidden" />
            <input id="imageUpload" type="file" name="Image" accept=".png, .jpg, .jpeg" /><br />
        </div>
    </div>

    <div class="col-md-4">
        <div class="thumb">
            <img src="@imageUrl" class="img-thumbnail img-fluid" id="productImage" />
        </div>
    </div>

    <button type="button" id="update-product">Update</button>
</form>

<script>
    $("#imageUpload").change(function () {
        var element = this;

        var formData = new FormData();
        var totalFiles = element.files.length;

        for (let i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
            type: "POST",
            url: "/Shared/UploadImage",
            data: formData,
            dataType: 'json',
            processData: false,
            contentType: false
        }).done(function (response) {
            if (response.Success) {
                $("#ImageUrl").val(response.ImageUrl);
                $("#productImage").attr("src", response.ImageUrl);
            }
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#form-product-edition").validate({
        rules: {
            Name: {
                required: true,
                minlength: 5,
                maxlength: 25
            },
            Description: {
                required: true,
                minlength: 5,
                maxlength: 90
            },
            Price: {
                required: true,
                number: true,
                range: [0, 10000]
            }
        },
        messages: {
            Name: {
                required: 'Name is required',
                minlength: 'Minimum length is 5',
                maxlength: 'Maximum length is 25'
            },
            Description: {
                required: 'Description is required',
                minlength: 'Minimum length is 5',
                maxlength: 'Maximum length is 90'
            },
            Price: {
                required: 'Price is required',
                digit: 'Price must be digit!',
                range: 'Maximum price is 10000!'
            }
        },
        // Called when the element is invalid:
        highlight: function (element) {
            $(element).css('background', '#ffdddd');
        },
        // Called when the element is valid:
        unhighlight: function (element) {
            $(element).css('background', '#ffffff');
        }
    });

    $("#update-product").click(function () {
        if ($("#form-product-edition").valid()) {
            $.ajax({
                type: "POST",
                url: "/Product/Edit",
                data: $("#form-product-edition").serialize()
            }).done(function (response) {
                $('#action-container').html("");
                $('#table-container').html(response);
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
        }
    });
</script>
