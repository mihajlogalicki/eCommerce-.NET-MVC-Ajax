@model OnlineShop.ViewModels.ProductViewModel
@{
    ViewBag.Title = "ProductTable";
}

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="search-text" type="text" name="search" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-6">
                            <button class="form-control btn btn-danger" type="button" id="search-btn">Search</button>
                        </div>
                        <div class="col-md-6">
                            <button class="form-control btn btn-danger" type="button" id="add-btn">Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <td>Product Name</td>
                <td>Category</td>
                <td>Price</td>
                <td>Actions</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>
                        @if (product.Category != null)
                        {
                            <text>@product.Category.Name</text>
                        }
                        else
                        {
                            <text>-</text>
                        }
                    </td>
                    <td>@product.Price</td>
                    <td>
                        <button class="edit-btn" data-id="@product.Id">Edit</button>
                        <button class="delete-btn" data-id="@product.Id">Delete</button>
                        <button class="add-to-cart" data-id="@product.Id">Add To Cart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <button class="pageButtons btn btn-outline-danger" id="next-records-btn" data-pageNo="1">first</button>
        @if (Model.PageNo > 1)
        {
            <button class="pageButtons btn btn-warning" id="next-records-btn" data-pageNo="@(Model.PageNo - 1)">
                <i class="fa fa-angle-double-left fa-10x"></i>
            </button>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.PageNo == @i)
            {
                <button class="pageButtons btn btn-warning" id="next-records-btn" data-pageNo="@i">@i</button>
            }
            else
            {
                <button class="pageButtons btn btn-danger" id="next-records-btn" data-pageNo="@i">@i</button>
            }
        }
        @if (Model.PageNo < Model.TotalPages)
        {
            <button class="pageButtons btn btn-warning" id="next-records-btn" data-pageNo="@(Model.PageNo + 1)">
                <i class="fa fa-angle-double-right fa-10x"></i>
            </button>
        }
       <button class="pageButtons btn btn-outline-danger" id="next-records-btn" data-pageNo="@(Model.PageNo = Model.TotalPages)">last</button>
    </div>
</div>

<script>
    $("#search-btn").click(function () {
        var searchValue = $("#search-text").val();
        $.cookie('cookie-product', searchValue);

        $.ajax({
            type: "GET",
            url: "/Product/ProductTable",
            data: {
                search: searchValue
            }
        }).done(function (response) {
            $('#table-container').html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#add-btn").click(function () {
        $.ajax({
            type: "GET",
            url: "/Product/Create"
        }).done(function (response) {
            $('#action-container').html(response);
            focusAction();
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".pageButtons").click(function () {
        $.ajax({
            type: "GET",
            url: "/Product/ProductTable",
            data: {
                PageNo: $(this).attr("data-pageNo"),
                search: $.cookie('cookie-product') 
            }
        }).done(function (response) {
            $('#table-container').html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".edit-btn").click(function () {
        var dataId = $(this).attr("data-id")
        $.ajax({
            type: "GET",
            url: "/Product/Edit",
            data: {
                id: dataId
            }
        }).done(function (response) {
            $('footer').remove();
            $('#action-container').html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".delete-btn").click(function () {
        var dataId = $(this).attr("data-id")

        swal({
            title: "Confirm",
            text: "Are you sure you want to Delete this product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
        if(willDelete) {
            $.ajax({
                type: "POST",
                url: "/Product/Delete",
                data: {
                    id: dataId
                }
            }).done(function (response) {
                $('#table-container').html(response);
                swal("Poof! Your Product has been deleted!", {
                    icon: "success",
                });
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
        } else {
            swal("Your Product is safe!");
        }
      });
    });

    var products = [];

    $(".add-to-cart").click(function () {
        var product = $(this).attr('data-id');
        products.push(product);
        $.cookie("CartProducts", products.join('-'), {path: '/'});
    });

    function focusAction() {
        $('html, body').animate({
            scrollTop: $("#action-container").offset().top - 100
        }, 1000);
    }
</script>
